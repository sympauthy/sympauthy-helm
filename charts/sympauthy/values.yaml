# Images being deployed by this chart.
images:
  # SympAuthy authorization server.
  # https://github.com/sympauthy/sympauthy
  auth:
    repository: ghcr.io/sympauthy/sympauthy-nightly
    tag: latest
    pullPolicy: Always

# Unsecured configurations being passed to the image.
configs:
  # List of configurations (micronaut environements) to enable on the image.
  enabled:
    auth: default

  # List of config for the autorization server available here:
  # https://github.com/sympauthy/sympauthy/wiki/4---Configuration
  auth: {}

# Secured configurations being passed to the image.
secrets:
  # List of config for the autorization server available here:
  # https://github.com/sympauthy/sympauthy/wiki/4---Configuration
  auth: {}

# Name override for the resources of the deployments.
nameOverrides:
  auth: ""

# Fullname override for the resources of the deployments.
fullnameOverrides: 
  auth: ""

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  auth: {}

podLabels: 
  auth: {}

podSecurityContexts: 
  auth: {}
  # fsGroup: 2000

securityContexts: 
  auth: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

services:
  auth:
    type: ClusterIP
    port: 8080

ingresses:
  auth:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
  auth:
    requests:
      memory: 128Mi

autoscaling:
  auth:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

replicaCounts:
  auth: 1

# Additional volumes on the output Deployment definition.
volumes: 
  auth: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  auth: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelectors: 
  auth: {}

tolerations: 
  auth: []

affinities: 
  auth: {}
