apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sympauthy.fullnames.auth" . }}
  labels:
    {{- include "sympauthy.labels.auth" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.auth.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sympauthy.selectorLabels.auth" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations.auth }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sympauthy.labels.auth" . | nindent 8 }}
        {{- with .Values.podLabels.auth }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.auth.repository }}:{{ .Values.images.auth.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.images.auth.pullPolicy }}
          env:
            {{- include "sympauthy.envs.auth" . | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.services.auth.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources.auth | nindent 12 }}
          volumeMounts:
            {{- if .Values.configs.auth }} 
            # Mount ConfigMap containing application configuration.
            - name: {{ include "sympauthy.configmaps.auth" . }}
              mountPath: "/etc/configmap"
              readOnly: true
            {{- end }}
            {{- if .Values.secrets.auth }} 
            # Mount Secret containing application configuration.
            - name: {{ include "sympauthy.secrets.auth" . }}
              mountPath: "/etc/secret"
              readOnly: true
            {{- end }}
            {{- with .Values.volumes.auth }} 
            # Mount other user define volumes.
            {{- toYaml .Values.volumeMounts.auth | nindent 12 }}
            {{- end }}
      volumes:
        {{- if .Values.configs.auth }} 
        # Expose application.yml from ConfigMap as a volume.
        - name: {{ include "sympauthy.configmaps.auth" . }}
          configMap:
            name: {{ include "sympauthy.configmaps.auth" . }}
            items:
            - key: "application.yml"
              path: "application.yml"
        {{- end }}
        {{- if .Values.configs.auth }} 
        # Expose application.yml from Secret as a volume.
        - name: {{ include "sympauthy.secrets.auth" . }}
          secret:
            secretName: {{ include "sympauthy.secrets.auth" . }}
        {{- end}}
        {{- with .Values.volumes.auth }} 
        # Expose other user defined volumes.
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelectors.auth }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinities.auth }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations.auth }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
